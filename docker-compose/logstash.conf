input {
  beats {
    port => 5044
    ssl => false
  }
}

filter {
  # Attempt to parse the `message` field as JSON
  json {
    source => "message"
    target => "parsed_json"  # Optional: where to store parsed JSON (leaves original intact if specified)
    # skip_on_invalid_json => true # Optional: skip messages that aren't valid JSON
  }

  # If you don't use 'target', JSON fields will become root-level fields
  # Example conditional: handle only if 'parsed_json' was created successfully
  if "_jsonparsefailure" in [tags] {
    # Handle JSON parse failures here (optional)
    mutate {
      add_tag => ["_json_parse_failure"]
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
    #user => "elastic"
    #password => "changeme"
  }
  if "_jsonparsefailure" in [tags] {
    stdout {
      codec => rubydebug
    }
  }
}